/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */


@interface RACSignal : NSObject {
}
//@property(readonly, assign, nonatomic) RACSequence* sequence;
+(id)startLazilyWithScheduler:(id)scheduler block:(id)block;
+(id)startEagerlyWithScheduler:(id)scheduler block:(id)block;
+(id)never;
+(id)error:(id)error;
+(id)createSignal:(id)signal;
+(id)return:(id)aReturn;
+(id)empty;
+(id)startWithScheduler:(id)scheduler block:(id)block;
+(id)start:(id)start;
+(id)startWithScheduler:(id)scheduler subjectBlock:(id)block;
+(id)defer:(id)defer;
+(id)if:(id)anIf then:(id)then else:(id)anElse;
+(id)switch:(id)aSwitch cases:(id)cases default:(id)aDefault;
+(id)interval:(double)interval onScheduler:(id)scheduler withLeeway:(double)leeway;
+(id)interval:(double)interval onScheduler:(id)scheduler;
+(id)merge:(id)merge;
+(id)combineLatest:(id)latest reduce:(id)reduce;
+(id)combineLatest:(id)latest;
+(id)interval:(double)interval withLeeway:(double)leeway;
+(id)interval:(double)interval;
-(id)description;
-(id)zipWith:(id)with;
-(id)concat:(id)concat;
-(id)bind:(id)bind;
-(id)subscribeError:(id)error completed:(id)completed;
-(id)subscribeNext:(id)next error:(id)error;
-(id)subscribeCompleted:(id)completed;
-(id)subscribeError:(id)error;
-(id)subscribeNext:(id)next error:(id)error completed:(id)completed;
-(id)subscribeNext:(id)next completed:(id)completed;
-(id)subscribeNext:(id)next;
-(id)subscribe:(id)subscribe;
-(id)logCompleted;
-(id)logError;
-(id)logNext;
-(id)logAll;
-(BOOL)asynchronouslyWaitUntilCompleted:(id*)completed;
-(id)asynchronousFirstOrDefault:(id)aDefault success:(BOOL*)success error:(id*)error;
//-(id)or;
//-(id)and;
//-(id)not;
-(id)dematerialize;
-(id)materialize;
-(id)ignoreValues;
-(id)sample:(id)sample;
-(id)retry;
-(id)retry:(int)retry;
-(id)all:(id)all;
-(id)any:(id)any;
-(id)any;
-(id)groupBy:(id)by;
-(id)groupBy:(id)by transform:(id)transform;
-(id)subscribeOn:(id)on;
-(id)deliverOn:(id)on;
-(id)timeout:(double)timeout onScheduler:(id)scheduler;
-(id)replayLazily;
-(id)replayLast;
-(id)replay;
-(id)multicast:(id)multicast;
-(id)publish;
-(id)toArray;
-(BOOL)waitUntilCompleted:(id*)completed;
-(id)firstOrDefault:(id)aDefault success:(BOOL*)success error:(id*)error;
-(id)firstOrDefault:(id)aDefault;
-(id)first;
-(id)switchToLatest;
-(id)takeUntilReplacement:(id)replacement;
-(id)takeUntil:(id)until;
-(id)setKeyPath:(id)path onObject:(id)object nilValue:(id)value;
-(id)setKeyPath:(id)path onObject:(id)object;
-(id)aggregateWithStart:(id)start reduceWithIndex:(id)index;
-(id)aggregateWithStart:(id)start reduce:(id)reduce;
-(id)aggregateWithStartFactory:(id)startFactory reduce:(id)reduce;
-(id)concat;
-(id)then:(id)then;
-(id)flatten:(unsigned)flatten;
-(id)merge:(id)merge;
-(id)combineLatestWith:(id)with;
-(id)takeLast:(unsigned)last;
-(id)collect;
-(id)bufferWithTime:(double)time onScheduler:(id)scheduler;
-(id)finally:(id)finally;
-(id)initially:(id)initially;
-(id)tryMap:(id)map;
-(id)try:(id)aTry;
-(id)catchTo:(id)to;
//-(id)catch:(id)aCatch;
-(id)repeat;
-(id)delay:(double)delay;
-(id)throttle:(double)throttle valuesPassingTest:(id)test;
-(id)throttle:(double)throttle;
-(id)doCompleted:(id)completed;
-(id)doError:(id)error;
-(id)doNext:(id)next;
-(id)executeCommand:(id)command;
-(id)aggregateWithStartFactory:(id)startFactory combine:(id)combine;
-(id)aggregateWithStart:(id)start combine:(id)combine;
-(id)sequenceNext:(id)next;
-(id)ignoreElements;
-(id)toProperty:(id)property onObject:(id)object;
-(id)bufferWithTime:(double)time;
-(id)timeout:(double)timeout;
-(id)let:(id)let;
-(id)buffer:(unsigned)buffer;
-(id)windowWithStart:(id)start close:(id)close;
@end

